-- @name		Introducing Primary key
-- @version		1.0
-- @domains		Catalogue of Model Transformations
-- @authors		Baudry Julien (jul.baudry<at>gmail.com)
-- @date		2006/08/02
-- @description	The purpose of this transformation is to introduce a primary key in each class
-- @see http://www.dcs.kcl.ac.uk/staff/kcl/tcat.pdf   
-- @see section 1.6, page 6
-- @see author of article : K. Lano

module PrimaryKey; 
create OUT : KM3target from IN : KM3;

--@begin rule Metamodel
rule Metamodel {
	from
		inputMm:KM3!Metamodel
	to
		outputMm:KM3target!Metamodel (
			location <- inputMm.location,
			contents <- inputMm.contents
		)
}
--@end rule Metamodel

--@begin rule Package
rule Package {
	from
		inputPkg:KM3!Package
	to
		outputPkg:KM3target!Package (
			name <- inputPkg.name,
			contents <- inputPkg.contents
		)
}
--@end rule Package

--@begin rule Class
rule Class {
	from
		inputA:KM3!Class 
	to
		outputA:KM3target!Class (
			name <- inputA.name,
			isAbstract <- inputA.isAbstract,
			structuralFeatures <- inputA.structuralFeatures
		),

		key:KM3target!Attribute (
			name <- inputA.name.toLower()+'Key',
			isOrdered <- false,
			isUnique <- false,
			location <- '',
			lower <- 1,
			upper <- 1,
			type <- KM3!DataType.allInstances()->select(a|a.name = 'Integer')->first(),
			owner <- outputA
		)
}
--@end rule Class

--@begin rule reference
rule DataType {
from
		inputData:KM3!DataType
	to
		outputData:KM3target!DataType(
			name <- inputData.name,
			location <- inputData.location
		)
}
--@end rule reference
